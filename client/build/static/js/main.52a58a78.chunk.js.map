{"version":3,"sources":["Components/Card/WeatherCard.js","App.js","index.js"],"names":["WeatherCard","content","dayOfWeek","Date","applicable_date","getDay","Card","className","CardBody","CardTitle","tag","CardSubtitle","weather_state_name","alt","src","weather_state_abbr","CardText","Math","round","max_temp","min_temp","wind_direction_compass","wind_speed","App","useState","location","setLocation","loading","setLoading","weather","setWeather","searchError","setSearchError","console","log","Container","Form","FormGroup","Label","for","Input","onChange","e","preventDefault","target","value","handleUpdate","onKeyPress","ev","key","type","id","placeholder","Button","color","onClick","url","axios","get","then","a","res","data","title","length","woeid","locationRes","consolidatedWeather","consolidated_weather","handleSearch","CardGroup","Spinner","children","map","day","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAGe,SAASA,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QAG9BC,EAFK,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1C,IAAIC,KAAKF,EAAQG,iBACFC,UAC3B,OACE,cAACC,EAAA,EAAD,CAAMC,UAAU,MAAhB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,SAAqBR,IACrB,cAACS,EAAA,EAAD,CAAcD,IAAI,KAAKH,UAAU,kBAAjC,SACGN,EAAQW,qBAEX,qBACEC,IAAI,eACJC,IAAG,yDAAoDb,EAAQc,mBAA5D,UAEL,eAACC,EAAA,EAAD,wBAAqBC,KAAKC,MAAMjB,EAAQkB,UAAxC,UACA,eAACH,EAAA,EAAD,wBAAqBC,KAAKC,MAAMjB,EAAQmB,UAAxC,UACA,eAACJ,EAAA,EAAD,oBACSf,EAAQoB,uBAAwB,IACtCJ,KAAKC,MAAMjB,EAAQqB,YAFtB,eCoFOC,MAxFf,WACE,MAAgCC,mBAAS,aAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAkCA,OAFAC,QAAQC,IAAIT,GAGV,+BACE,cAACU,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAW9B,UAAU,MAArB,UACE,gEACA,cAAC+B,EAAA,EAAD,CAAOC,IAAI,OAAX,kBACA,cAACC,EAAA,EAAD,CACEC,SAAU,SAACC,GAAD,OAfD,SAACA,GACpBA,EAAEC,iBACFjB,EAAYgB,EAAEE,OAAOC,OAaMC,CAAaJ,IAC9BK,WAAY,SAACC,GACI,UAAXA,EAAGC,KACLD,EAAGL,kBAGPO,KAAK,OACLC,GAAG,OACHC,YAAY,iBAGhB,cAACf,EAAA,EAAD,CAAW9B,UAAU,MAArB,SACE,cAAC8C,EAAA,EAAD,CACEC,MAAM,UACNC,QAAS,YAtDA,SAAC9B,GACpB,GAAKA,EAAL,CAIAG,GAAW,GACX,IACM4B,EACJ,+BAE4B/B,GAC9BgC,IAAMC,IAAIF,GAAKG,KAAf,+BAAAC,EAAA,MAAoB,WAAOC,GAAP,mBAAAD,EAAA,yDAClBlC,EAAYmC,EAAIC,KAAKC,QACjBF,EAAIC,KAAKE,OAFK,wBAGVC,EAAQJ,EAAIC,KAAK,GAAGG,MAHV,SAIUR,IAAMC,IAAN,UAThB,wBASgB,yBAAmCO,IAJ7C,OAIVC,EAJU,OAKVC,EAAsBD,EAAYJ,KAAKM,qBAC7CtC,EAAWqC,GACXvC,GAAW,GAPK,wBAShBI,GAAe,GATC,4CAApB,wDA4CYqC,CAAa5C,IAHjB,sBASF,cAACY,EAAA,EAAD,CAAW9B,UAAU,MAArB,SACE,cAAC+D,EAAA,EAAD,UACI3C,GAAYI,EAIVA,EACF,iDACEJ,EACF,cAAC4C,EAAA,EAAD,CAASjB,MAAM,UAAUkB,SAAS,KAElC,GARA3C,EAAQ4C,KAAI,SAACC,GACX,OAAO,cAAC1E,EAAD,CAA0BC,QAASyE,GAAjBA,EAAIvB,mB,MChF/CwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.52a58a78.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap'\n\nexport default function WeatherCard({ content }) {\n  let days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  const day = new Date(content.applicable_date)\n  const dayOfWeek = days[day.getDay()]\n  return (\n    <Card className=\"m-2\">\n      <CardBody>\n        <CardTitle tag=\"h5\">{dayOfWeek}</CardTitle>\n        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n          {content.weather_state_name}\n        </CardSubtitle>\n        <img\n          alt=\"weather-icon\"\n          src={`https://www.metaweather.com/static/img/weather/${content.weather_state_abbr}.svg`}\n        ></img>\n        <CardText>Max Temp: {Math.round(content.max_temp)}°</CardText>\n        <CardText>Min Temp: {Math.round(content.min_temp)}°</CardText>\n        <CardText>\n          Wind: {content.wind_direction_compass}{' '}\n          {Math.round(content.wind_speed)} mph\n        </CardText>\n      </CardBody>\n    </Card>\n  )\n}\n","import axios from 'axios'\nimport React from 'react'\n\nimport { useState } from 'react'\nimport {\n  Button,\n  Container,\n  Input,\n  Label,\n  Form,\n  FormGroup,\n  CardGroup,\n  Spinner,\n} from 'reactstrap'\nimport WeatherCard from './Components/Card/WeatherCard'\n\nfunction App() {\n  const [location, setLocation] = useState('Melbourne')\n  const [loading, setLoading] = useState(false)\n  const [weather, setWeather] = useState([])\n  const [searchError, setSearchError] = useState(false)\n\n  const handleSearch = (location) => {\n    if (!location) {\n      return\n    }\n\n    setLoading(true)\n    const local = 'http://localhost:8000'\n    const url =\n      process.env.NODE_ENV !== 'production'\n        ? `${local}/api/location/search/${location}`\n        : `/api/location/search/${location}`\n    axios.get(url).then(async (res) => {\n      setLocation(res.data.title)\n      if (res.data.length) {\n        const woeid = res.data[0].woeid\n        const locationRes = await axios.get(`${local}/api/location/${woeid}`)\n        const consolidatedWeather = locationRes.data.consolidated_weather\n        setWeather(consolidatedWeather)\n        setLoading(false)\n      } else {\n        setSearchError(true)\n      }\n    })\n  }\n\n  const handleUpdate = (e) => {\n    e.preventDefault()\n    setLocation(e.target.value)\n  }\n\n  console.log(location)\n\n  return (\n    <main>\n      <Container>\n        <Form>\n          <FormGroup className=\"m-3\">\n            <h1>Search For Your City's Weather</h1>\n            <Label for=\"city\">City</Label>\n            <Input\n              onChange={(e) => handleUpdate(e)}\n              onKeyPress={(ev) => {\n                if (ev.key === 'Enter') {\n                  ev.preventDefault()\n                }\n              }}\n              type=\"text\"\n              id=\"city\"\n              placeholder=\"Your City\"\n            />\n          </FormGroup>\n          <FormGroup className=\"m-3\">\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                handleSearch(location)\n              }}\n            >\n              Search\n            </Button>\n          </FormGroup>\n          <FormGroup className=\"m-2\">\n            <CardGroup>\n              {!loading && !searchError ? (\n                weather.map((day) => {\n                  return <WeatherCard key={day.id} content={day} />\n                })\n              ) : searchError ? (\n                <p>No Results Found</p>\n              ) : loading ? (\n                <Spinner color=\"primary\" children=\"\"></Spinner>\n              ) : (\n                ''\n              )}\n            </CardGroup>\n          </FormGroup>\n        </Form>\n      </Container>\n    </main>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}